
import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author tiago
 */
public class Projeto extends javax.swing.JFrame {

    int i, j;
    String a, b, c;
    double resultado = 0;
    Queue<String> pilha = new LinkedList<String>();
    Queue<String> pilhaaux = new LinkedList<String>();
    Stack<String> pilhaaux2 = new Stack<String>();
    Stack<String> pilhaaux3 = new Stack<String>();

    boolean falso = true, igual = false, igual2 = false, igual3 = false;

    /**
     * Creates new form Projeto
     */
    public Projeto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        display = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        limpa = new javax.swing.JButton();
        limpa_tudo = new javax.swing.JButton();
        backspace = new javax.swing.JButton();
        um = new javax.swing.JButton();
        dois = new javax.swing.JButton();
        tres = new javax.swing.JButton();
        quatro = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        cinco = new javax.swing.JButton();
        sete = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        oito = new javax.swing.JButton();
        seis = new javax.swing.JButton();
        nove = new javax.swing.JButton();
        inverte = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        ponto = new javax.swing.JButton();
        soma = new javax.swing.JButton();
        subtrai = new javax.swing.JButton();
        multiplica = new javax.swing.JButton();
        divide = new javax.swing.JButton();
        resultados = new javax.swing.JButton();
        sair = new javax.swing.JButton();
        buffer = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        display.setEditable(false);
        display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        limpa.setText("CE");
        limpa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpaActionPerformed(evt);
            }
        });

        limpa_tudo.setText("C");
        limpa_tudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpa_tudoActionPerformed(evt);
            }
        });

        backspace.setText("<-");
        backspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backspaceActionPerformed(evt);
            }
        });

        um.setText("1");
        um.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                umActionPerformed(evt);
            }
        });

        dois.setText("2");
        dois.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doisActionPerformed(evt);
            }
        });

        tres.setText("3");
        tres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tresActionPerformed(evt);
            }
        });

        quatro.setText("4");
        quatro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quatroActionPerformed(evt);
            }
        });

        jButton8.setText("jButton8");

        cinco.setText("5");
        cinco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cincoActionPerformed(evt);
            }
        });

        sete.setText("7");
        sete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seteActionPerformed(evt);
            }
        });

        jButton11.setText("jButton11");

        oito.setText("8");
        oito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oitoActionPerformed(evt);
            }
        });

        seis.setText("6");
        seis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seisActionPerformed(evt);
            }
        });

        nove.setText("9");
        nove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noveActionPerformed(evt);
            }
        });

        inverte.setText("+/-");
        inverte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inverteActionPerformed(evt);
            }
        });

        zero.setText("0");
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });

        ponto.setText(".");
        ponto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pontoActionPerformed(evt);
            }
        });

        soma.setText("+");
        soma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                somaActionPerformed(evt);
            }
        });

        subtrai.setText("-");
        subtrai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtraiActionPerformed(evt);
            }
        });

        multiplica.setText("*");
        multiplica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplicaActionPerformed(evt);
            }
        });

        divide.setText("/");
        divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideActionPerformed(evt);
            }
        });

        resultados.setText("=");
        resultados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inverte, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(sete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(um, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(limpa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quatro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(zero, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(limpa_tudo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(dois, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(cinco, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(oito, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ponto, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(nove, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(divide, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(resultados, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(seis, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(backspace, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                                    .addComponent(tres, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(soma, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(multiplica, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(subtrai, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))))
                .addGap(66, 66, 66))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(tres, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                        .addComponent(subtrai, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(dois, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(limpa, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(limpa_tudo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(backspace, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(soma, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(um, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(seis, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quatro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(cinco, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(multiplica, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sete, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(oito, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(nove, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(divide, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inverte, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(zero, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(ponto, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(resultados, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                .addContainerGap())
        );

        sair.setBackground(new java.awt.Color(255, 0, 0));
        sair.setForeground(new java.awt.Color(255, 255, 255));
        sair.setText("X");
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });

        buffer.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 357, Short.MAX_VALUE)
                .addComponent(sair))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buffer)
                    .addComponent(display, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sair, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(display, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buffer, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Double calcula() {
        i = 0;
        a = pilha.poll();
        pilhaaux.add(a);
        j = 0;
        b = pilha.poll();
        pilhaaux.add(b);
        while (!pilha.isEmpty() || i == 0) {
            c = pilha.poll();
            if (c == null) {
                if ("+".equals(b) || "-".equals(b)) {
                    c = "0";
                } else if ("*".equals(b) || "/".equals(b)) {
                    c = "1";
                }
            } else {
                pilhaaux.add(c);
            }
            if (i == 0) {
                i++;
                switch (b) {
                    case "+":
                        resultado += (Double.parseDouble(a)) + (Double.parseDouble(c));
                        break;
                    case "-":
                        resultado += (Double.parseDouble(a)) - (Double.parseDouble(c));
                        break;
                    case "*":
                        resultado += (Double.parseDouble(a)) * (Double.parseDouble(c));
                        break;
                    case "/":
                        resultado += (Double.parseDouble(a)) / (Double.parseDouble(c));
                        if (Double.isInfinite(resultado) || Double.isNaN(resultado)) {
                            while (!pilha.isEmpty()) {
                                pilha.poll();
                            }
                            while (!pilhaaux.isEmpty()) {
                                pilhaaux.poll();
                            }
                            falso = true;
                            igual = false;
                            igual2 = false;
                            igual3 = false;
                        }
                        break;
                }
            } else {
                switch (b) {
                    case "+":
                        resultado += (Double.parseDouble(c));
                        break;
                    case "-":
                        resultado -= (Double.parseDouble(c));
                        break;
                    case "*":
                        resultado *= (Double.parseDouble(c));
                        break;
                    case "/":
                        resultado /= (Double.parseDouble(c));
                        if (Double.isInfinite(resultado) || Double.isNaN(resultado)) {
                            while (!pilha.isEmpty()) {
                                pilha.poll();
                            }
                            while (!pilhaaux.isEmpty()) {
                                pilhaaux.poll();
                            }
                            falso = true;
                            igual = false;
                            igual2 = false;
                            igual3 = false;
                        }
                        break;
                }
            }
            b = pilha.poll();
            if (b != null) {
                pilhaaux.add(b);
            }
        }

        while (!pilhaaux.isEmpty()) {
            pilha.add(pilhaaux.poll());
        }
        return resultado;
    }
    private void displayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayActionPerformed

    private void umActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_umActionPerformed

        if (falso) {
            display.setText("");
            falso = false;

        } else if (igual2) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push("1");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
            igual2 = false;
            display.setText("");
        } else if (igual3) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push(display.getText() + "1");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
        }
        display.setText(display.getText() + 1);
    }//GEN-LAST:event_umActionPerformed

    private void somaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_somaActionPerformed
        if (igual) {
            igual = false;
            igual2 = false;
            igual3 = false;
            falso = true;
            a = pilha.poll();
            while (!pilha.isEmpty()) {
                pilha.poll();
            }
            pilha.add(a);
            pilha.add("+");
            buffer.setText("");
            while (!pilha.isEmpty()) {
                pilhaaux.add(pilha.peek());
                buffer.setText(buffer.getText() + pilha.poll());
            }
            while (!pilhaaux.isEmpty()) {
                pilha.add(pilhaaux.poll());
            }

        } else if (falso) {
            try {
                while (!pilha.isEmpty()) {
                    pilhaaux2.push(pilha.poll());
                }
                if (pilhaaux2.peek().equals("-") || pilhaaux2.peek().equals("*") || pilhaaux2.peek().equals("/")) {
                    pilhaaux2.pop();
                    pilhaaux2.push("+");
                    buffer.setText("");
                    while (!pilhaaux2.isEmpty()) {
                        pilhaaux3.push(pilhaaux2.pop());
                    }
                    while (!pilhaaux3.isEmpty()) {
                        pilha.add(pilhaaux3.pop());
                    }
                    while (!pilha.isEmpty()) {
                        pilhaaux.add(pilha.peek());
                        buffer.setText(buffer.getText() + pilha.poll());
                    }
                    while (!pilhaaux.isEmpty()) {
                        pilha.add(pilhaaux.poll());
                    }
                } else {
                    while (!pilhaaux2.isEmpty()) {
                        pilhaaux3.push(pilhaaux2.pop());
                    }
                    while (!pilhaaux3.isEmpty()) {
                        pilha.add(pilhaaux3.pop());
                    }
                }
            } catch (Exception e) {

            }
        } else {
            resultado = 0;
            pilha.add(display.getText());
            pilha.add("+");
            falso = true;
            display.setText(calcula() + "");
            buffer.setText("");
            while (!pilha.isEmpty()) {
                pilhaaux.add(pilha.peek());
                buffer.setText(buffer.getText() + pilha.poll());
            }
            while (!pilhaaux.isEmpty()) {
                pilha.add(pilhaaux.poll());
            }
        }
    }//GEN-LAST:event_somaActionPerformed

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_sairActionPerformed

    private void limpaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpaActionPerformed

        display.setText("");
    }//GEN-LAST:event_limpaActionPerformed

    private void doisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doisActionPerformed

        if (falso) {
            display.setText("");
            falso = false;
        } else if (igual2) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push("2");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
            igual2 = false;
            display.setText("");
        } else if (igual3) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push(display.getText() + "2");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
        }
        display.setText(display.getText() + 2);
    }//GEN-LAST:event_doisActionPerformed

    private void tresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tresActionPerformed

        if (falso) {
            display.setText("");
            falso = false;
        } else if (igual2) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push("3");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
            igual2 = false;
            display.setText("");
        } else if (igual3) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push(display.getText() + "3");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
        }
        display.setText(display.getText() + 3);
    }//GEN-LAST:event_tresActionPerformed

    private void quatroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quatroActionPerformed

        if (falso) {
            display.setText("");
            falso = false;
        } else if (igual2) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push("4");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
            igual2 = false;
            display.setText("");
        } else if (igual3) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push(display.getText() + "4");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
        }
        display.setText(display.getText() + 4);
    }//GEN-LAST:event_quatroActionPerformed

    private void cincoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cincoActionPerformed

        if (falso) {
            display.setText("");
            falso = false;

        } else if (igual2) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push("5");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
            igual2 = false;
            display.setText("");
        } else if (igual3) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push(display.getText() + "5");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
        }
        display.setText(display.getText() + 5);
    }//GEN-LAST:event_cincoActionPerformed

    private void seisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seisActionPerformed

        if (falso) {
            display.setText("");
            falso = false;
        } else if (igual2) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push("6");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
            igual2 = false;
            display.setText("");
        } else if (igual3) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push(display.getText() + "6");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
        }
        display.setText(display.getText() + 6);
    }//GEN-LAST:event_seisActionPerformed

    private void seteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seteActionPerformed

        if (falso) {
            display.setText("");
            falso = false;
        } else if (igual2) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push("7");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
            igual2 = false;
            display.setText("");
        } else if (igual3) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push(display.getText() + "7");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
        }
        display.setText(display.getText() + 7);
    }//GEN-LAST:event_seteActionPerformed

    private void oitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oitoActionPerformed

        if (falso) {
            display.setText("");
            falso = false;
        } else if (igual2) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push("8");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
            igual2 = false;
            display.setText("");
        } else if (igual3) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push(display.getText() + "8");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
        }
        display.setText(display.getText() + 8);
    }//GEN-LAST:event_oitoActionPerformed

    private void noveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noveActionPerformed

        if (falso) {
            display.setText("");
            falso = false;
        } else if (igual2) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push("9");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
            igual2 = false;
            display.setText("");
        } else if (igual3) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push(display.getText() + "9");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
        }
        display.setText(display.getText() + 9);
    }//GEN-LAST:event_noveActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed

        if (falso) {
            display.setText("");
            falso = false;
        } else if (igual2) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push("0");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
            igual2 = false;
            display.setText("");
        } else if (igual3) {
            pilha.poll();
            while (!pilha.isEmpty()) {
                pilhaaux2.push(pilha.poll());
            }
            while (!pilhaaux2.isEmpty()) {
                pilhaaux3.push(pilhaaux2.pop());
            }
            pilhaaux3.push(display.getText() + "0");
            while (!pilhaaux3.isEmpty()) {
                pilha.add(pilhaaux3.pop());
            }
        }
        display.setText(display.getText() + 0);
    }//GEN-LAST:event_zeroActionPerformed

    private void backspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backspaceActionPerformed
        try {
            if (!falso && (!igual || !igual2)) {
                char[] aux = display.getText().toCharArray();
                char[] aux2 = new char[(aux.length) - 1];
                for (i = 0; i < (aux.length) - 1; i++) {
                    aux2[i] = aux[i];
                }
                display.setText("");
                for (i = 0; i < aux2.length; i++) {
                    display.setText(display.getText() + aux2[i]);
                }
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_backspaceActionPerformed

    private void pontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pontoActionPerformed
        if ("".equals(display.getText()) || display.getText() == null || igual2 || "Infinity".equals(display.getText())||"-Infinity".equals(display.getText()) || "NaN".equals(display.getText())) {

        } else {
            char[] aux = display.getText().toCharArray();
            for (i = 0, j = 0; i < aux.length; i++) {
                if (aux[i] == '.') {
                    j++;
                    break;
                }
            }
            if (j == 0) {
                display.setText(display.getText() + ".");
            }
        }
    }//GEN-LAST:event_pontoActionPerformed

    private void inverteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inverteActionPerformed
        char[] aux = display.getText().toCharArray();
        try {
            if (falso) {
                return;
            }
            if (aux[0] == '-') {
                char[] aux2 = new char[(aux.length)];
                for (i = 1; i < aux.length; i++) {
                    aux2[i] = aux[i];
                }
                display.setText("");
                for (i = 0; i < aux2.length; i++) {
                    display.setText(display.getText() + aux2[i]);
                }
            } else {
                char[] aux2 = new char[(aux.length) + 1];
                aux2[0] = '-';
                for (i = 0; i < aux.length; i++) {
                    aux2[i + 1] = aux[i];
                }
                display.setText("");
                for (i = 0; i < aux2.length; i++) {
                    display.setText(display.getText() + aux2[i]);
                }
            }
            if (igual) {
                pilha.poll();
                while (!pilha.isEmpty()) {
                    pilhaaux.add(pilha.poll());
                }
                pilha.add(display.getText());
                while (!pilhaaux.isEmpty()) {
                    pilha.add(pilhaaux.poll());
                }
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_inverteActionPerformed

    private void resultadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultadosActionPerformed
        try {
            i = 0;
            while (!pilha.isEmpty()) {
                i++;
                pilhaaux.add(pilha.poll());
            }
            while (!pilhaaux.isEmpty()) {
                pilha.add(pilhaaux.poll());
            }
            if (i < 2) {

            } else if (i <= 2 && (display.getText().equals("") || display.getText() == null)) {

            } else if (!igual) {
                if (!(display.getText().equals(""))) {
                    pilha.add(display.getText());
                }
                resultado = 0;
                display.setText(calcula() + "");
                if(Double.isInfinite(resultado)||Double.isNaN(resultado)){
                    buffer.setText("");
                    return;
                }
                while (!pilha.isEmpty()) {
                    pilhaaux2.push(pilha.poll());
                }
                if (pilhaaux2.peek().equals("-") || pilhaaux2.peek().equals("*") || pilhaaux2.peek().equals("/") || pilhaaux2.peek().equals("+")) {
                    pilhaaux2.pop();
                }
                igual = true;
                igual2 = true;
                igual3 = true;
                falso = false;
                pilha.add(resultado + "");
                a = pilhaaux2.pop();
                b = pilhaaux2.pop();
                pilha.add(b);
                pilha.add(a);
                while (!pilhaaux2.isEmpty()) {
                    pilhaaux2.pop();
                }
                buffer.setText("");
            } else if (igual && "".equals(display.getText())) {

            } else {
                resultado = 0;
                igual2 = true;
                display.setText(calcula() + "");
                buffer.setText("");
                while (!pilha.isEmpty()) {
                    pilhaaux.add(pilha.peek());
                    buffer.setText(buffer.getText() + pilha.poll());
                }
                while (!pilhaaux.isEmpty()) {
                    pilha.add(pilhaaux.poll());
                }
                pilha.poll();
                while (!pilha.isEmpty()) {
                    pilhaaux.add(pilha.poll());
                }
                pilha.add(resultado + "");
                while (!pilhaaux.isEmpty()) {
                    pilha.add(pilhaaux.poll());
                }
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_resultadosActionPerformed

    private void limpa_tudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpa_tudoActionPerformed
        resultado = 0;
        falso = true;
        buffer.setText("");
        display.setText("");
        while (!pilha.isEmpty()) {
            pilha.poll();
        }
        igual = false;
        igual3 = false;
        igual2 = false;
    }//GEN-LAST:event_limpa_tudoActionPerformed

    private void subtraiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtraiActionPerformed
        if (igual) {
            igual = false;
            igual2 = false;
            igual3 = false;
            falso = true;
            a = pilha.poll();
            while (!pilha.isEmpty()) {
                pilha.poll();
            }
            pilha.add(a);
            pilha.add("-");
            buffer.setText("");
            while (!pilha.isEmpty()) {
                pilhaaux.add(pilha.peek());
                buffer.setText(buffer.getText() + pilha.poll());
            }
            while (!pilhaaux.isEmpty()) {
                pilha.add(pilhaaux.poll());
            }
        } else if (falso) {
            try {
                while (!pilha.isEmpty()) {
                    pilhaaux2.push(pilha.poll());
                }
                if (pilhaaux2.peek().equals("+") || pilhaaux2.peek().equals("*") || pilhaaux2.peek().equals("/")) {
                    pilhaaux2.pop();
                    pilhaaux2.push("-");
                    buffer.setText("");
                    while (!pilhaaux2.isEmpty()) {
                        pilhaaux3.push(pilhaaux2.pop());
                    }
                    while (!pilhaaux3.isEmpty()) {
                        pilha.add(pilhaaux3.pop());
                    }
                    while (!pilha.isEmpty()) {
                        pilhaaux.add(pilha.peek());
                        buffer.setText(buffer.getText() + pilha.poll());
                    }
                    while (!pilhaaux.isEmpty()) {
                        pilha.add(pilhaaux.poll());
                    }
                } else {
                    while (!pilhaaux2.isEmpty()) {
                        pilhaaux3.push(pilhaaux2.pop());
                    }
                    while (!pilhaaux3.isEmpty()) {
                        pilha.add(pilhaaux3.pop());
                    }
                }
            } catch (Exception e) {

            }
        } else {
            resultado = 0;
            pilha.add(display.getText());
            pilha.add("-");
            falso = true;
            display.setText(calcula() + "");
            buffer.setText("");
            while (!pilha.isEmpty()) {
                pilhaaux.add(pilha.peek());
                buffer.setText(buffer.getText() + pilha.poll());
            }
            while (!pilhaaux.isEmpty()) {
                pilha.add(pilhaaux.poll());
            }
        }
    }//GEN-LAST:event_subtraiActionPerformed

    private void multiplicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplicaActionPerformed
        if (igual) {
            igual = false;
            igual2 = false;
            igual3 = false;
            falso = true;
            a = pilha.poll();
            while (!pilha.isEmpty()) {
                pilha.poll();
            }
            pilha.add(a);
            pilha.add("*");
            buffer.setText("");
            while (!pilha.isEmpty()) {
                pilhaaux.add(pilha.peek());
                buffer.setText(buffer.getText() + pilha.poll());
            }
            while (!pilhaaux.isEmpty()) {
                pilha.add(pilhaaux.poll());
            }

        } else if (falso) {
            try {
                while (!pilha.isEmpty()) {
                    pilhaaux2.push(pilha.poll());
                }
                if (pilhaaux2.peek().equals("-") || pilhaaux2.peek().equals("+") || pilhaaux2.peek().equals("/")) {
                    pilhaaux2.pop();
                    pilhaaux2.push("*");
                    buffer.setText("");
                    while (!pilhaaux2.isEmpty()) {
                        pilhaaux3.push(pilhaaux2.pop());
                    }
                    while (!pilhaaux3.isEmpty()) {
                        pilha.add(pilhaaux3.pop());
                    }
                    while (!pilha.isEmpty()) {
                        pilhaaux.add(pilha.peek());
                        buffer.setText(buffer.getText() + pilha.poll());
                    }
                    while (!pilhaaux.isEmpty()) {
                        pilha.add(pilhaaux.poll());
                    }
                } else {
                    while (!pilhaaux2.isEmpty()) {
                        pilhaaux3.push(pilhaaux2.pop());
                    }
                    while (!pilhaaux3.isEmpty()) {
                        pilha.add(pilhaaux3.pop());
                    }
                }
            } catch (Exception e) {

            }
        } else {
            resultado = 0;
            pilha.add(display.getText());
            pilha.add("*");
            falso = true;
            display.setText(calcula() + "");
            buffer.setText("");
            while (!pilha.isEmpty()) {
                pilhaaux.add(pilha.peek());
                buffer.setText(buffer.getText() + pilha.poll());
            }
            while (!pilhaaux.isEmpty()) {
                pilha.add(pilhaaux.poll());
            }
        }
    }//GEN-LAST:event_multiplicaActionPerformed

    private void divideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideActionPerformed
        if (igual) {
            igual = false;
            igual2 = false;
            igual3 = false;
            falso = true;
            a = pilha.poll();
            while (!pilha.isEmpty()) {
                pilha.poll();
            }
            pilha.add(a);
            pilha.add("/");
            buffer.setText("");
            while (!pilha.isEmpty()) {
                pilhaaux.add(pilha.peek());
                buffer.setText(buffer.getText() + pilha.poll());
            }
            while (!pilhaaux.isEmpty()) {
                pilha.add(pilhaaux.poll());
            }

        } else if (falso) {
            try {
                while (!pilha.isEmpty()) {
                    pilhaaux2.push(pilha.poll());
                }
                if (pilhaaux2.peek().equals("-") || pilhaaux2.peek().equals("*") || pilhaaux2.peek().equals("+")) {
                    pilhaaux2.pop();
                    pilhaaux2.push("/");
                    buffer.setText("");
                    while (!pilhaaux2.isEmpty()) {
                        pilhaaux3.push(pilhaaux2.pop());
                    }
                    while (!pilhaaux3.isEmpty()) {
                        pilha.add(pilhaaux3.pop());
                    }
                    while (!pilha.isEmpty()) {
                        pilhaaux.add(pilha.peek());
                        buffer.setText(buffer.getText() + pilha.poll());
                    }
                    while (!pilhaaux.isEmpty()) {
                        pilha.add(pilhaaux.poll());
                    }
                } else {
                    while (!pilhaaux2.isEmpty()) {
                        pilhaaux3.push(pilhaaux2.pop());
                    }
                    while (!pilhaaux3.isEmpty()) {
                        pilha.add(pilhaaux3.pop());
                    }
                }
            } catch (Exception e) {

            }
        } else {
            resultado = 0;
            pilha.add(display.getText());
            pilha.add("/");
            falso = true;
            display.setText(calcula() + "");
            buffer.setText("");
            while (!pilha.isEmpty()) {
                pilhaaux.add(pilha.peek());
                buffer.setText(buffer.getText() + pilha.poll());
            }
            while (!pilhaaux.isEmpty()) {
                pilha.add(pilhaaux.poll());
            }
        }
    }//GEN-LAST:event_divideActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Projeto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Projeto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Projeto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Projeto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Projeto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backspace;
    private javax.swing.JTextField buffer;
    private javax.swing.JButton cinco;
    private javax.swing.JTextField display;
    private javax.swing.JButton divide;
    private javax.swing.JButton dois;
    private javax.swing.JButton inverte;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton limpa;
    private javax.swing.JButton limpa_tudo;
    private javax.swing.JButton multiplica;
    private javax.swing.JButton nove;
    private javax.swing.JButton oito;
    private javax.swing.JButton ponto;
    private javax.swing.JButton quatro;
    private javax.swing.JButton resultados;
    private javax.swing.JButton sair;
    private javax.swing.JButton seis;
    private javax.swing.JButton sete;
    private javax.swing.JButton soma;
    private javax.swing.JButton subtrai;
    private javax.swing.JButton tres;
    private javax.swing.JButton um;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
